### Base variables
@baseUrl = http://localhost:3000
@contentType = application/json

### 1. Health check
GET {{baseUrl}}/health
Accept: application/json

### 2. Sign up (change the email before first use)
# @name signup
POST {{baseUrl}}/auth/signup
Content-Type: {{contentType}}

{
  "email": "test22@example.com",
  "password": "Passw0rd!123"
}

### 3. Login (must match a signed up user)
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "test22@example.com",
  "password": "Passw0rd!123"
}

### 4. Extract access token from login response (VS Code REST Client syntax)
@accessToken = {{login.response.body.$.session.access_token}}

### 5. Get current user (/auth/me) with Bearer token
GET {{baseUrl}}/auth/me
Authorization: Bearer {{accessToken}}
Accept: application/json

### 6. Negative test: missing token
GET {{baseUrl}}/auth/me
Accept: application/json

### 7. Negative test: invalid token
GET {{baseUrl}}/auth/me
Authorization: Bearer INVALID_TOKEN_VALUE
Accept: application/json

### Notes:
# - Use the VS Code "REST Client" extension or IntelliJ HTTP client to run this file.
# - Update the email to a unique value if Supabase reports the user already exists.
# - The @accessToken variable is populated automatically after running the login request.
# - Never commit real production keys or tokens into this file.
